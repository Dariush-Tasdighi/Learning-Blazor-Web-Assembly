@* ************************************************** *@
@*
@using Microsoft.AspNetCore.Components.Routing

<Router AppAssembly="@typeof(App).Assembly">

	<Found Context="routeData">
		<RouteView RouteData="@(routeData)" DefaultLayout="@typeof(Shared.MainLayout)" />
		<FocusOnNavigate RouteData="@(routeData)" Selector="h1" />
	</Found>

	<NotFound>
		<PageTitle>Not found</PageTitle>
		<LayoutView Layout="@typeof(Shared.MainLayout)">
			<p role="alert">Sorry, there's nothing at this address.</p>
		</LayoutView>
	</NotFound>

</Router>
 *@
@* ************************************************** *@

@* ************************************************** *@
@* *** For Lazy Loading ***************************** *@
@* ************************************************** *@
@using System.Reflection
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.WebAssembly.Services

@inject LazyAssemblyLoader assemblyLoader

<Router AppAssembly="@typeof(Program).Assembly" AdditionalAssemblies="@(LazyLoadedAssemblies)" OnNavigateAsync="@(OnNavigateAsync)">
	<Navigating>
		<div style="padding:20px;background-color:blue;color:white">
			<p>Loading the requested page&hellip;</p>
		</div>
	</Navigating>

	<Found Context="routeData">
		<RouteView RouteData="@(routeData)" DefaultLayout="@typeof(Shared.MainLayout)" />
	</Found>

	<NotFound>
		<LayoutView Layout="@typeof(Shared.MainLayout)">
			<p>Sorry, there's nothing at this address.</p>
		</LayoutView>
	</NotFound>
</Router>

@code
{
	private List<Assembly> LazyLoadedAssemblies { get; } = new List<Assembly>();

	private async Task OnNavigateAsync(NavigationContext args)
	{
		try
		{
			//System.Console.WriteLine(args.Path);

			if (args.Path.StartsWith(value: "x/"))
			{
				var assemblies =
					await
					assemblyLoader.LoadAssembliesAsync
					(assembliesToLoad: new List<string>() { "Dtat.Razor.Lazy.dll" });

				LazyLoadedAssemblies.AddRange(collection: assemblies);
			}

			// if (args.Path.StartsWith(value: "crm/"))
			// {
			// 	var assemblies =
			// 		await
			// 		assemblyLoader.LoadAssembliesAsync
			// 		(assembliesToLoad: new List<string>() { "Crm.dll" });

			// 	LazyLoadedAssemblies.AddRange(collection: assemblies);
			// }

			// if (args.Path.StartsWith(value: "accounting/"))
			// {
			// 	var assemblies =
			// 		await
			// 		assemblyLoader.LoadAssembliesAsync
			// 		(assembliesToLoad: new List<string>() { "Accounting.dll" });

			// 	LazyLoadedAssemblies.AddRange(collection: assemblies);
			// }
		}
		catch (Exception ex)
		{
			System.Console.WriteLine(ex.Message);
		}
	}
}
@* ************************************************** *@
